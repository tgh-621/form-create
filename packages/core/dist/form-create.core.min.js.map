{"version":3,"file":"form-create.core.min.js","sources":["../../utils/src/index.js","../src/components/formCreate.js","../src/core/mergeJsxProps.js","../src/factory/vData.js","../src/factory/creator.js","../src/core/util.js","../src/factory/maker.js","../src/factory/vNode.js","../src/factory/parser.js","../src/core/render.js","../src/core/api.js","../src/core/handle.js","../src/components/fragment.jsx","../src/core/index.js","../src/factory/form.js"],"sourcesContent":["import Vue from 'vue';\n\nexport function $set(target, field, value) {\n    Vue.set(target, field, value);\n}\n\nexport function $del(target, field) {\n    Vue.delete(target, field);\n}\n\nexport function isValidChildren(children) {\n    return Array.isArray(children) && children.length > 0;\n}\n\nexport const _toString = Object.prototype.toString;\n\nexport function isUndef(v) {\n    return v === undefined || v === null\n}\n\nexport function toString(val) {\n    return val == null\n        ? ''\n        : typeof val === 'object'\n            ? JSON.stringify(val, null, 2)\n            : String(val)\n}\n\nexport function extend(to, _from) {\n    for (var key in _from) {\n        $set(to, key, _from[key]);\n    }\n    return to\n}\n\nexport function debounce(fn, wait) {\n    var timeout = null;\n    return function (...arg) {\n        if (timeout !== null)\n            clearTimeout(timeout);\n        timeout = setTimeout(() => fn(...arg), wait);\n    }\n}\n\nexport function isType(arg, type) {\n    return _toString.call(arg) === '[object ' + type + ']'\n}\n\nexport function isDate(arg) {\n    return isType(arg, 'Date');\n}\n\nexport function isPlainObject(arg) {\n    return isType(arg, 'Object');\n}\n\nexport function isFunction(arg) {\n    return isType(arg, 'Function');\n}\n\nexport function isString(arg) {\n    return isType(arg, 'String');\n}\n\nexport function isBool(arg) {\n    return isType(arg, 'Boolean');\n}\n\nexport function toLine(name) {\n    let line = name.replace(/([A-Z])/g, '-$1').toLowerCase();\n    if (line.indexOf('-') === 0)\n        line = line.substr(1);\n    return line;\n}\n\nexport function isNumeric(n) {\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(n)\n}\n\nexport function toArray(value) {\n    return Array.isArray(value)\n        ? value\n        : ((isUndef(value) || value === '' ? [] : [value])\n        );\n}\n\nexport function isElement(arg) {\n    return typeof arg === 'object' && arg !== null && arg.nodeType === 1 && !isPlainObject(arg)\n}\n\nexport function deepExtend(origin, target = {}, mode) {\n    let isArr = false;\n    for (let key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n            let clone = target[key];\n            if ((isArr = Array.isArray(clone)) || isPlainObject(clone)) {\n                let nst = origin[key] === undefined;\n                if (isArr) {\n                    isArr = false;\n                    nst && $set(origin, key, []);\n                } else if (clone._clone) {\n                    clone = clone._clone();\n                    if (mode) {\n                        clone = clone.getRule();\n                        nst && $set(origin, key, {});\n                    } else {\n                        $set(origin, key, clone);\n                        continue;\n                    }\n                } else {\n                    nst && $set(origin, key, {});\n                }\n                deepExtend(origin[key], clone, mode);\n            } else {\n                $set(origin, key, clone);\n            }\n        }\n    }\n    return origin\n}\n\nexport function deepExtendArgs(origin, ...lst) {\n    lst.forEach(target => {\n        origin = deepExtend(origin, target);\n    });\n    return origin;\n}\n\nlet id = 0;\n\nexport function uniqueId() {\n    return ++id\n}\n\nexport function toDefSlot(slot, $h) {\n    return [slot && isFunction(slot) ? slot($h) : slot]\n}\n\n\nexport function timeStampToDate(timeStamp) {\n    if (isDate(timeStamp))\n        return timeStamp;\n    else {\n        let date = new Date(timeStamp);\n        return date.toString() === 'Invalid Date' ? timeStamp : date;\n    }\n}\n\nexport function preventDefault(e) {\n    e.preventDefault();\n}\n\nexport function dateFormat(fmt, date = new Date) {\n    let o = {\n        'M+': date.getMonth() + 1,\n        'd+': date.getDate(),\n        'h+': date.getHours(),\n        'm+': date.getMinutes(),\n        's+': date.getSeconds(),\n        'q+': Math.floor((date.getMonth() + 3) / 3),\n        'S': date.getMilliseconds()\n    };\n    if (/(y+)/.test(fmt))\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length));\n    for (let k in o)\n        if (new RegExp('(' + k + ')').test(fmt))\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1)\n                ? (o[k])\n                : (('00' + o[k]).substr(('' + o[k]).length)));\n    return fmt\n}\n\nexport function hasSlot(children, slotName) {\n    return children.length !== 0 && children.some(child => {\n        if (child.data) {\n            if ((!child.data.slot && slotName === 'default') || (child.data.slot === slotName))\n                return true;\n        } else if (slotName === 'default')\n            return true;\n        return false;\n    })\n}\n\nexport function errMsg(i) {\n\n    return '\\n\\x67\\x69\\x74\\x68\\x75\\x62\\x3a\\x68\\x74\\x74\\x70' +\n        '\\x73\\x3a\\x2f\\x2f\\x67\\x69\\x74\\x68\\x75\\x62\\x2e\\x63\\x6f' +\n        '\\x6d\\x2f\\x78\\x61\\x62\\x6f\\x79\\x2f\\x66\\x6f\\x72\\x6d\\x2d' +\n        '\\x63\\x72\\x65\\x61\\x74\\x65\\n\\x64\\x6f\\x63\\x75\\x6d\\x65' +\n        '\\x6e\\x74\\x3a\\x68\\x74\\x74\\x70\\x3a\\x2f\\x2f\\x77\\x77\\x77' +\n        '\\x2e\\x66\\x6f\\x72\\x6d\\x2d\\x63\\x72\\x65\\x61\\x74\\x65\\x2e' +\n        '\\x63\\x6f\\x6d' + (i || '');\n}\n","import {deepExtend} from '@form-create/utils';\n\nexport const formCreateName = 'FormCreate';\n\nexport default function $FormCreate(FormCreate, components) {\n    return {\n        name: formCreateName,\n        componentName: formCreateName,\n        props: {\n            rule: {\n                type: Array,\n                required: true\n            },\n            option: {\n                type: Object,\n                default: () => {\n                    return {};\n                },\n                required: false\n            },\n            value: Object\n        },\n        data: () => {\n            return {\n                formData: undefined,\n                buttonProps: undefined,\n                resetProps: undefined,\n                $f: undefined,\n                isShow: true,\n                unique: 1,\n            };\n        },\n        components,\n        render() {\n            return this.formCreate.render();\n        },\n        methods: {\n            _buttonProps(props) {\n                this.$set(this, 'buttonProps', deepExtend(this.buttonProps, props));\n            },\n            _resetProps(props) {\n                this.$set(this, 'resetProps', deepExtend(this.resetProps, props));\n            },\n            _refresh() {\n                ++this.unique;\n            }\n        },\n        watch: {\n            option: '_refresh',\n            rule(n) {\n                this.formCreate.handle.reloadRule(n);\n            }\n        },\n        beforeCreate() {\n            const {rule, option} = this.$options.propsData;\n            this.formCreate = new FormCreate(rule, option);\n            this.formCreate.beforeCreate(this);\n        },\n        created() {\n            this.formCreate.created();\n            this.$f = this.formCreate.api();\n            this.$emit('input', this.$f);\n        },\n        mounted() {\n            this.formCreate.mounted();\n            this.$emit('input', this.$f);\n        },\n        beforeDestroy() {\n            this.formCreate.handle.reloadRule([]);\n            this.formCreate.handle.$render.clearCacheAll();\n        },\n    }\n}\n","const normalMerge = ['attrs', 'props', 'domProps'];\nconst toArrayMerge = ['class', 'style', 'directives'];\nconst functionalMerge = ['on', 'nativeOn'];\n\nconst mergeJsxProps = (objects, initial) =>\n    objects.reduce((a, b) => {\n        for (const key in b) {\n            if (a[key]) {\n                if (normalMerge.indexOf(key) !== -1) {\n                    a[key] = {...a[key], ...b[key]}\n                } else if (toArrayMerge.indexOf(key) !== -1) {\n                    const arrA = a[key] instanceof Array ? a[key] : [a[key]];\n                    const arrB = b[key] instanceof Array ? b[key] : [b[key]];\n                    a[key] = [...arrA, ...arrB]\n                } else if (functionalMerge.indexOf(key) !== -1) {\n                    for (const event in b[key]) {\n                        if (a[key][event]) {\n                            const arrA = a[key][event] instanceof Array ? a[key][event] : [a[key][event]];\n                            const arrB = b[key][event] instanceof Array ? b[key][event] : [b[key][event]];\n                            a[key][event] = [...arrA, ...arrB]\n                        } else {\n                            a[key][event] = b[key][event]\n                        }\n                    }\n                } else if (key === 'hook') {\n                    for (let hook in b[key]) {\n                        if (a[key][hook]) {\n                            a[key][hook] = mergeFn(a[key][hook], b[key][hook])\n                        } else {\n                            a[key][hook] = b[key][hook]\n                        }\n                    }\n                } else {\n                    a[key] = b[key]\n                }\n            } else {\n                a[key] = b[key]\n            }\n        }\n        return a\n    }, initial);\n\nconst mergeFn = (fn1, fn2) =>\n    function () {\n        fn1 && fn1.apply(this, arguments);\n        fn2 && fn2.apply(this, arguments);\n    };\n\nexport default mergeJsxProps\n","import {isPlainObject, isUndef, toString} from '@form-create/utils';\nimport mergeJsxProps from '../core/mergeJsxProps';\n\nfunction defVData() {\n    return {\n        // class: {},\n        // style: {},\n        // attrs: {},\n        props: {},\n        // domProps: {},\n        on: {},\n        // nativeOn: {},\n        // directives: [],\n        // scopedSlots: {},\n        // slot: undefined,\n        // key: undefined,\n        // ref: undefined\n    };\n}\n\nexport default class VData {\n\n    constructor() {\n        this.init();\n    }\n\n    merge(props) {\n        mergeJsxProps([props], this._data);\n        return this;\n    }\n\n    class(classList, status = true) {\n        if (isUndef(classList)) return this;\n\n        if (Array.isArray(classList)) {\n            this.merge({class: classList});\n        } else if (isPlainObject(classList)) {\n            this.merge(classList);\n        } else {\n            this.merge({class: {[toString(classList)]: !!status}});\n        }\n\n        return this;\n    }\n\n    init() {\n        this._data = defVData();\n        return this;\n    }\n\n    get() {\n        const data = Object.keys(this._data).reduce((initial, key) => {\n            const value = this._data[key];\n            if (value === undefined) return initial;\n            if (Array.isArray(value) && !value.length) return initial;\n            if (isPlainObject(value) && !Object.keys(value).length && key !== 'props') return initial;\n\n            initial[key] = value;\n            return initial;\n        }, {});\n        this.init();\n        return data;\n    }\n}\n\nconst keyList = ['ref', 'key', 'slot'];\nconst objList = ['scopedSlots', 'nativeOn', 'on', 'domProps', 'props', 'attrs', 'style', 'directives'];\n\nkeyList.forEach(key => {\n    VData.prototype[key] = function (val) {\n        this.merge({[key]: val});\n        return this;\n    };\n});\n\nobjList.forEach(key => {\n    VData.prototype[key] = function (obj, val) {\n        if (isUndef(obj)) return this;\n        if (isPlainObject(obj)) {\n            this.merge({[key]: obj})\n        } else {\n            this.merge({[key]: {[toString(obj)]: val}})\n        }\n\n        return this;\n    };\n});\n\nexport const vdataField = objList.concat(keyList, 'class');\n","import {$set, deepExtend, extend, isFunction, isPlainObject} from '@form-create/utils';\nimport VData from './vData';\n\nfunction baseRule() {\n    return {\n        validate: [],\n        options: [],\n        col: {},\n        children: [],\n        control: [],\n        emit: [],\n        template: undefined,\n        emitPrefix: undefined,\n        native: undefined,\n        info: undefined,\n    };\n}\n\nexport function creatorFactory(name) {\n    return (title, field, value, props = {}) => new Creator(name, title, field, value, props);\n}\n\nexport function creatorTypeFactory(name, type, typeName = 'type') {\n    return (title, field, value, props = {}) => {\n        const maker = new Creator(name, title, field, value, props);\n        if (isFunction(type)) type(maker);\n        else maker.props(typeName, type);\n        return maker;\n    };\n}\n\nexport default class Creator extends VData {\n    constructor(type, title, field, value, props = {}) {\n        super();\n        extend(this._data, baseRule());\n        extend(this._data, {type, title, field, value});\n        if (isPlainObject(props)) this.props(props);\n    }\n\n    type(type) {\n        this.props('type', type);\n        return this;\n    }\n\n    _clone() {\n        const clone = new this.constructor();\n        clone._data = deepExtend({}, this._data);\n        return clone;\n    }\n\n    getRule() {\n        return this._data;\n    }\n\n    event(...args) {\n        this.on(...args);\n        return this;\n    }\n}\n\nconst keyAttrs = ['emitPrefix', 'className', 'value', 'name', 'title', 'native', 'info', 'hidden', 'visibility', 'inject', 'model'];\n\nkeyAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (value) {\n        $set(this._data, attr, value);\n        return this;\n    };\n});\n\nconst objAttrs = ['col'];\n\nobjAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        $set(this._data, attr, extend(this._data[attr], opt));\n        return this;\n    };\n});\n\nconst arrAttrs = ['validate', 'options', 'children', 'emit', 'control'];\n\narrAttrs.forEach(attr => {\n    Creator.prototype[attr] = function (opt) {\n        if (!Array.isArray(opt)) opt = [opt];\n        $set(this._data, attr, this._data[attr].concat(opt));\n        return this;\n    };\n});\n","import {deepExtend, isUndef} from '@form-create/utils';\n\nconst PREFIX = '[[FORM-CREATE-PREFIX-';\nconst SUFFIX = '-FORM-CREATE-SUFFIX]]';\n\nexport function toJson(obj) {\n    return JSON.stringify(deepExtend([], obj, true), function (key, val) {\n        if (val && val._isVue === true)\n            return undefined;\n\n        if (typeof val !== 'function') {\n            return val;\n        }\n        if (val.__inject)\n            val = val.__origin;\n\n        if (val.__emit)\n            return undefined;\n\n        return PREFIX + val + SUFFIX;\n    });\n}\n\nfunction makeFn(fn) {\n    return eval('(function(){return ' + fn + ' })()')\n}\n\nexport function parseJson(json, mode) {\n    return JSON.parse(json, function (k, v) {\n        if (isUndef(v) || !v.indexOf) return v;\n        try {\n            if (v.indexOf(SUFFIX) > 0 && v.indexOf(PREFIX) === 0) {\n                v = v.replace(SUFFIX, '').replace(PREFIX, '');\n                return makeFn(v.indexOf('function') === -1 && v.indexOf('(') !== 0 ? 'function ' + v : v);\n            } else if (!mode && v.indexOf('function') > -1)\n                return makeFn(v)\n        } catch (e) {\n            console.error(`[form-create]解析失败:${v}`);\n            return undefined;\n        }\n        return v;\n    });\n}\n\nexport function enumerable(value) {\n    return {\n        value,\n        enumerable: false,\n        configurable: false\n    }\n}\n\nexport function copyRule(rule, mode) {\n    return copyRules([rule], mode)[0];\n}\n\nexport function copyRules(rules, mode) {\n    return deepExtend([], rules, mode);\n}\n","import Creator, {creatorFactory} from './creator';\nimport {parseJson, enumerable} from '../core/util';\nimport {extend, isPlainObject, isString, isValidChildren} from '@form-create/utils';\n\n\nconst commonMaker = creatorFactory('');\n\nexport function create(type, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = type;\n    make._data.title = title;\n    return make;\n}\n\nexport function createTmp(template, vm, field, title) {\n    let make = commonMaker('', field);\n    make._data.type = 'template';\n    make._data.template = template;\n    make._data.title = title;\n    make._data.vm = vm;\n    return make;\n}\n\nexport default function makerFactory() {\n    let maker = {};\n\n    extend(maker, {\n        create,\n        createTmp\n    });\n    maker.template = createTmp;\n    maker.parse = parse;\n\n    return maker;\n}\n\nfunction parse(rule, toMaker = false) {\n    if (isString(rule)) rule = parseJson(rule);\n\n    if (rule instanceof Creator) return toMaker ? rule : rule.getRule();\n    if (isPlainObject(rule)) {\n        const maker = ruleToMaker(rule);\n        return toMaker ? maker : maker.getRule();\n    } else if (!Array.isArray(rule)) return rule;\n    else {\n        const rules = rule.map(r => parse(r, toMaker));\n        Object.defineProperties(rules, {\n            find: enumerable(findField),\n            model: enumerable(model)\n        });\n\n        return rules;\n    }\n}\n\nfunction findField(field, origin) {\n    let children = [];\n    for (let i in this) {\n        const rule = this[i] instanceof Creator ? this[i]._data : this[i];\n        if (rule.field === field) return origin === true ? rule : this[i];\n        if (isValidChildren(rule.children)) children = children.concat(rule.children);\n    }\n    if (children.length > 0) return findField.call(children, field);\n}\n\nfunction model(formData) {\n    Object.keys(formData).forEach(field => {\n        const rule = this.find(field, true);\n        if (rule) rule.value = formData[field];\n    });\n}\n\nfunction ruleToMaker(rule) {\n    const maker = new Creator();\n    Object.keys(rule).forEach(key => {\n        maker._data[key] = rule[key];\n    });\n    return maker;\n}\n","import {isFunction, isString, toString} from '@form-create/utils';\n\nfunction parseVData(data) {\n    if (isString(data))\n        data = {domProps: {innerHTML: data}};\n    else if (data && isFunction(data.get))\n        data = data.get();\n\n    return data;\n}\n\nfunction getVNode(VNode) {\n    return isFunction(VNode) ? VNode() : (VNode || []);\n}\n\nexport default class VNode {\n\n    constructor(vm) {\n        if (vm)\n            this.setVm(vm);\n    }\n\n    setVm(vm) {\n        this.vm = vm;\n        this.$h = vm.$createElement;\n    }\n\n    make(nodeName, data, VNodeFn) {\n        let Node = this.$h(nodeName, parseVData(data), getVNode(VNodeFn));\n        Node.context = this.vm;\n\n        return Node;\n    }\n\n    static use(nodes) {\n        Object.keys(nodes).forEach((k) => {\n            VNode.prototype[toString(k).toLocaleLowerCase()] = VNode.prototype[k] = function (data, VNodeFn) {\n                return this.make(nodes[k], data, VNodeFn);\n            };\n        });\n    }\n}\n\nVNode.use({fragment: 'fcFragment'});\n","import VData from './vData';\nimport {toString, uniqueId} from '@form-create/utils';\nimport VNode from './vNode';\n\nexport default class BaseParser {\n\n    constructor(handle, rule, id) {\n        this.rule = rule;\n        this.vData = new VData;\n        this.vNode = new VNode();\n        this.id = id;\n        this.watch = [];\n        this.originType = rule.type;\n        this.type = toString(rule.type).toLocaleLowerCase();\n        this.isDef = true;\n        this.el = undefined;\n\n        if (!rule.field) {\n            this.field = '_def_' + uniqueId();\n            this.isDef = false;\n        } else {\n            this.field = rule.field;\n        }\n        this.name = rule.name;\n\n        this.key = 'key_' + id;\n        this.refName = '__' + this.field + this.id;\n        this.formItemRefName = 'fi' + this.refName;\n        this.root = [];\n        this.ctrlRule = null;\n        this.modelEvent = 'input';\n\n        this.update(handle);\n        this.init();\n    }\n\n    update(handle) {\n        this.$handle = handle;\n        this.$render = handle.$render;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.vNode.setVm(this.vm);\n        this.deleted = false;\n    }\n\n    init() {\n    }\n\n    toFormValue(value) {\n        return value\n    }\n\n    toValue(formValue) {\n        return formValue;\n    }\n}\n","import {_vue as Vue} from './index';\nimport {debounce, errMsg, isFunction, isString, isUndef, isValidChildren} from '@form-create/utils';\nimport VNode from '../factory/vNode';\nimport VData, {vdataField} from '../factory/vData';\n\n\nconst $de = debounce((fn) => fn(), 1);\n\nexport default class Render {\n    constructor(handle) {\n        this.$handle = handle;\n        this.fc = handle.fc;\n        this.vm = handle.vm;\n        this.options = handle.options;\n        this.$form = handle.$form;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.cache = {};\n        this.renderList = {};\n    }\n\n    clearCache(parser, clear = true) {\n        if (!this.cache[parser.id]) return;\n        if (this.cacheStatus(parser))\n            this.$handle.refresh();\n        const parent = this.cache[parser.id].parent;\n        this.cache[parser.id] = null;\n        if (parent && clear)\n            this.clearCache(parent, clear);\n    }\n\n    clearCacheAll() {\n        this.cache = {};\n    }\n\n    setCache(parser, vnode, parent) {\n        this.cache[parser.id] = {\n            vnode,\n            use: false,\n            parent\n        };\n    }\n\n    cacheStatus(parser) {\n        return this.cache[parser.id] && (this.cache[parser.id].use === true || this.cache[parser.id].parent);\n    }\n\n    getCache(parser) {\n        const cache = this.cache[parser.id];\n        cache.use = true;\n        return cache.vnode;\n    }\n\n    initOrgChildren() {\n        const parsers = this.$handle.parsers;\n        this.orgChildren = Object.keys(parsers).reduce((initial, id) => {\n            const children = parsers[id].rule.children;\n            initial[id] = isValidChildren(children) ? [...children] : [];\n\n            return initial;\n        }, {});\n    }\n\n    run() {\n        if (!this.vm.isShow)\n            return;\n\n        this.$form.beforeRender();\n\n        const vn = this.$handle.sortList.map((id) => {\n            return this.renderParser(this.$handle.parsers[id]);\n        }).filter((val) => val !== undefined);\n\n        return this.$form.render(vn);\n    }\n\n    setGlobalConfig(parser) {\n        if (!this.options.global) return;\n        const global = this.options.global;\n\n        if (global['*']) {\n            this.toData(parser, global['*']);\n        }\n        if (global[parser.type]) {\n            this.toData(parser, global[parser.type]);\n        } else if (global[parser.originType]) {\n            this.toData(parser, global[parser.originType]);\n        }\n    }\n\n    renderTemplate(parser) {\n        const {id, rule, key} = parser;\n        if (isUndef(Vue.compile)) {\n            console.error('使用的 Vue 版本不支持 compile' + errMsg());\n            return [];\n        }\n\n        if (!this.renderList[id]) {\n            let vm = rule.vm;\n            if (isUndef(rule.vm))\n                vm = new Vue;\n            else if (isFunction(rule.vm))\n                vm = rule.vm(this.$handle.getInjectData(rule));\n\n            this.renderList[id] = {\n                vm,\n                template: Vue.compile(rule.template)\n            };\n\n        }\n\n        const {vm, template} = this.renderList[id];\n\n        setTemplateProps(vm, parser, this.$handle.fCreateApi);\n\n        vm.$off('input');\n        vm.$on('input', (value) => {\n            this.onInput(parser, value);\n        });\n\n        const vn = template.render.call(vm);\n\n        if (isUndef(vn.data)) vn.data = {};\n        vn.key = key;\n        return vn;\n    }\n\n    renderParser(parser, parent) {\n        if (parser.type === 'hidden') return;\n        if (!this.cache[parser.id] || parser.type === 'template') {\n\n            parser.vData.get();\n            this.setGlobalConfig(parser);\n\n            let {type, rule} = parser, form = this.$form, vn;\n\n            if (type === 'template' && rule.template) {\n                vn = this.renderTemplate(parser);\n\n                if (parent && isUndef(rule.native)) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            } else if (!this.$handle.isNoVal(parser)) {\n                const children = this.renderChildren(parser);\n                vn = parser.render ? parser.render(children) : this.defaultRender(parser, children);\n            } else {\n                vn = this.defaultRender(parser, this.renderChildren(parser));\n                if (parent && isUndef(rule.native)) {\n                    this.setCache(parser, vn, parent);\n                    return vn;\n                }\n            }\n            if (rule.native !== true)\n                vn = form.container(vn, parser);\n            this.setCache(parser, vn, parent);\n            return vn;\n        }\n\n        return this.getCache(parser);\n    }\n\n    toData(parser, data) {\n        vdataField.forEach((key) => {\n            if (data[key] !== undefined)\n                parser.vData[key](data[key]);\n        });\n\n        return parser.vData;\n    }\n\n    parserToData(parser) {\n        return this.toData(parser, parser.rule);\n    }\n\n    inputVData(parser, custom) {\n        const {refName, key} = parser;\n\n        this.parserToData(parser);\n\n        let data = parser.vData\n            .ref(refName).key('fc_item' + key).props('formCreate', this.$handle.fCreateApi)\n            .on('fc.subForm', (subForm) => this.$handle.addSubForm(parser, subForm));\n\n        if (!custom)\n            data.on(this.$handle.modelEvent(parser), (value) => {\n                this.onInput(parser, value);\n            }).props('value', this.$handle.getFormData(parser));\n\n        this.$form.inputVData && this.$form.inputVData(parser, custom);\n\n        return data;\n    }\n\n    onInput(parser, value) {\n        this.$handle.onInput(parser, value);\n    }\n\n    renderChildren(parser) {\n        const {children} = parser.rule, orgChildren = this.orgChildren[parser.id];\n\n        if (!isValidChildren(children)) {\n            orgChildren.forEach(child => {\n                if (!isString(child) && child.__fc__) {\n                    this.$handle.removeField(child.__fc__);\n                }\n            });\n            this.orgChildren[parser.id] = [];\n            return [];\n        }\n\n        this.orgChildren[parser.id].forEach(child => {\n            if (children.indexOf(child) === -1 && !isString(child) && child.__fc__) {\n                this.$handle.removeField(child.__fc__);\n            }\n        });\n\n        return children.map(child => {\n            if (isString(child)) return child;\n            if (child.__fc__) {\n                return this.renderParser(child.__fc__, parser);\n            }\n            if (child.type)\n                $de(() => this.$handle.reloadRule());\n        });\n\n    }\n\n    defaultRender(parser, children) {\n        const vdata = this.inputVData(parser);\n        if (this.vNode[parser.type])\n            return this.vNode[parser.type](vdata, children);\n        if (this.vNode[parser.originType])\n            return this.vNode[parser.originType](vdata, children);\n        return this.vNode.make(parser.originType, vdata, children);\n    }\n}\n\nfunction setTemplateProps(vm, parser, fApi) {\n    if (!vm.$props)\n        return;\n    const {rule} = parser;\n    const keys = Object.keys(vm.$props);\n    keys.forEach(key => {\n        if (rule.props[key] !== undefined)\n            vm.$props[key] = rule.props[key];\n    });\n\n    if (keys.indexOf('value') !== -1) {\n        vm.$props.value = parser.rule.value;\n    }\n    vm.$props.formCreate = fApi;\n}\n","import {$set, deepExtend, errMsg, isFunction, isPlainObject, isUndef} from '@form-create/utils';\nimport {toJson} from './util';\n\n\nexport default function Api(h) {\n\n    function tidyFields(fields, all = false) {\n        if (!fields)\n            fields = all ? Object.keys(h.fieldList) : h.fields();\n        else if (!Array.isArray(fields))\n            fields = [fields];\n        return fields;\n    }\n\n    return {\n        formData() {\n            const parsers = h.fieldList;\n\n            return Object.keys(parsers).reduce((initial, id) => {\n                const parser = parsers[id];\n                initial[parser.field] = deepExtend({}, {value: parser.rule.value}).value;\n                return initial;\n            }, {});\n        },\n        getValue(field) {\n            const parser = h.fieldList[field];\n            if (!parser) return;\n            return deepExtend({}, {value: parser.rule.value}).value;\n        },\n        setValue(field, value) {\n            let formData = field;\n            if (!isPlainObject(field))\n                formData = {[field]: value};\n            Object.keys(formData).forEach(key => {\n                const parser = h.fieldList[key];\n                if (!parser) return;\n                parser.rule.value = formData[key];\n            });\n        },\n        changeValue(field, value) {\n            this.setValue(field, value);\n        },\n        changeField(field, value) {\n            this.setValue(field, value);\n        },\n        removeField(field) {\n            let parser = h.getParser(field);\n            if (!parser)\n                return;\n            let index = parser.root.indexOf(parser.rule.__origin__);\n            if (index === -1)\n                return;\n            parser.root.splice(index, 1);\n            if (h.sortList.indexOf(parser.id) === -1)\n                this.reload();\n\n            return parser.rule.__origin__;\n        },\n        destroy: () => {\n            h.vm.$el.parentNode.removeChild(h.vm.$el);\n            h.vm.$destroy();\n        },\n        fields: () => h.fields(),\n        append: (rule, after, isChild) => {\n            let fields = Object.keys(h.fieldList), index = h.sortList.length, rules;\n\n            if (rule.field && fields.indexOf(rule.field) !== -1)\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            const parser = h.getParser(after);\n\n            if (parser) {\n                if (isChild) {\n                    rules = parser.rule.children;\n                    index = parser.rule.children.length;\n                } else {\n                    index = parser.root.indexOf(parser.rule.__origin__);\n                    rules = parser.root;\n                }\n            } else rules = h.rules;\n            rules.splice(index + 1, 0, rule);\n        },\n        prepend: (rule, after, isChild) => {\n            let fields = Object.keys(h.fieldList), index = 0, rules;\n\n            if (rule.field && fields.indexOf(rule.field) !== -1)\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            const parser = h.getParser(after);\n\n            if (parser) {\n                if (isChild) {\n                    rules = parser.rule.children;\n                } else {\n                    index = parser.root.indexOf(parser.rule.__origin__);\n                    rules = parser.root;\n                }\n            } else rules = h.rules;\n            rules.splice(index, 0, rule);\n        },\n        hidden(hidden, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.getParser(field);\n                if (!parser)\n                    return;\n                $set(parser.rule, 'hidden', !!hidden);\n                h.$render.clearCache(parser, true);\n            });\n            h.refresh();\n        },\n        hiddenStatus(id) {\n            const parser = h.getParser(id);\n            if (!parser) return;\n            return !!parser.rule.hidden;\n        },\n        visibility(visibility, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.getParser(field);\n                if (!parser)\n                    return;\n                $set(parser.rule, 'visibility', !!visibility);\n                h.$render.clearCache(parser, true);\n            });\n            h.refresh();\n        },\n        visibilityStatus(id) {\n            const parser = h.getParser(id);\n            if (!parser) return;\n            return !!parser.rule.visibility;\n        },\n        disabled(disabled, fields) {\n            tidyFields(fields, true).forEach((field) => {\n                const parser = h.fieldList[field];\n                if (!parser)\n                    return;\n                h.vm.$set(parser.rule.props, 'disabled', !!disabled);\n            });\n        },\n        model() {\n            return Object.keys(h.trueData).reduce((initial, key) => {\n                initial[key] = h.trueData[key].rule;\n                return initial;\n            }, {});\n        },\n        component() {\n            return Object.keys(h.customData).reduce((initial, key) => {\n                initial[key] = h.customData[key].rule;\n                return initial;\n            }, {});\n        },\n        bind() {\n            let bind = {}, properties = {};\n            Object.keys(h.fieldList).forEach((field) => {\n                const parser = h.fieldList[field];\n                properties[field] = {\n                    get() {\n                        return parser.rule.value;\n                    },\n                    set(value) {\n                        parser.rule.value = value;\n                    },\n                    enumerable: true,\n                    configurable: true\n                };\n            });\n            Object.defineProperties(bind, properties);\n            return bind;\n        },\n        submitBtnProps: (props = {}) => {\n            h.vm._buttonProps(props);\n        },\n        resetBtnProps: (props = {}) => {\n            h.vm._resetProps(props);\n        },\n        set: (node, field, value) => {\n            h.vm.$set(node, field, value);\n        },\n        reload: (rules) => {\n            h.reloadRule(rules)\n        },\n        updateOptions(options) {\n            deepExtend(h.options, options);\n            this.refresh(true);\n        },\n        onSubmit(fn) {\n            this.updateOptions({onSubmit: fn});\n        },\n        sync: (field) => {\n            const parser = h.getParser(field);\n            if (parser) {\n                h.$render.clearCache(parser, true);\n                h.refresh();\n            }\n        },\n        refresh: (clear) => {\n            if (clear)\n                h.$render.clearCacheAll();\n            h.refresh();\n        },\n        hideForm: (isShow) => {\n            h.vm.isShow = !isShow;\n        },\n        changeStatus: () => {\n            return h.changeStatus;\n        },\n        clearChangeStatus: () => {\n            h.changeStatus = false;\n        },\n        updateRule: (id, rule, cover) => {\n            const parser = h.getParser(id);\n            if (parser) {\n                cover ? Object.keys(rule).forEach(key => {\n                    parser.rule[key] = rule[key];\n                }) : deepExtend(parser.rule, rule);\n                return parser.rule.__origin__;\n            }\n        },\n        getRule: (id) => {\n            const parser = h.getParser(id);\n            if (parser) {\n                return parser.rule;\n            }\n        },\n        updateRules(rules, cover) {\n            Object.keys(rules).forEach(id => {\n                this.updateRule(id, rules[id], cover);\n            })\n        },\n        updateValidate(id, validate, merge) {\n            const parser = h.getParser(id);\n            if (parser) {\n                parser.rule.validate = merge ? parser.rule.validate.concat(validate) : validate;\n            }\n        },\n        updateValidates(validates, merge) {\n            Object.keys(validates).forEach(id => {\n                this.updateValidate(id, validates[id], merge);\n            })\n        },\n        method(id, name) {\n            const el = this.el(id);\n            if (!el || !el[name])\n                throw new Error('方法不存在' + errMsg());\n            return (...args) => {\n                return el[name](...args);\n            }\n        },\n        toJson() {\n            return toJson(this.rule);\n        },\n        on(...args) {\n            h.vm.$on(...args);\n        },\n        once(...args) {\n            h.vm.$once(...args);\n        },\n        off(...args) {\n            h.vm.$off(...args);\n        },\n        trigger(id, event, ...args) {\n            const el = this.el(id);\n            el && el.$emit(event, ...args);\n        },\n        el(id) {\n            const parser = h.getParser(id);\n            if (parser) return parser.el;\n        },\n        validate(callback) {\n            let state = false;\n            let subForm = {\n                ...{\n                    ___this: {\n                        validate(call) {\n                            h.$form.validate((valid) => {\n                                call && call(valid);\n                            });\n                        }\n                    }\n                }, ...h.subForm\n            };\n            let keys = Object.keys(subForm).filter(field => {\n                    const sub = subForm[field];\n                    return Array.isArray(sub) ? sub.length : !isUndef(sub);\n                }), len = keys.length, subLen;\n            const validFn = (valid, field) => {\n                if (valid) {\n                    if (subLen > 1) subLen--;\n                    else if (len > 1) len--;\n                    else callback(true);\n                } else {\n                    if (!state) {\n                        callback(false);\n                        state = true;\n                    }\n                    field && this.clearValidateState(field, false);\n                }\n            };\n\n            keys.forEach(field => {\n                let sub = subForm[field];\n                if (Array.isArray(sub)) {\n                    subLen = sub.length;\n                    sub.forEach(form => {\n                        form.validate((v) => validFn(v, field))\n                    })\n                } else if (sub) {\n                    subLen = 1;\n                    sub.validate(validFn)\n                }\n\n            });\n\n        },\n        validateField: (field, callback) => {\n            if (!h.fieldList[field])\n                return;\n            h.$form.validateField(field, callback);\n        },\n        resetFields(fields) {\n            let parsers = h.fieldList;\n            tidyFields(fields, true).forEach(field => {\n                let parser = parsers[field];\n                if (!parser) return;\n\n                if (parser.type === 'hidden') return;\n                h.$form.resetField(parser);\n                h.refreshControl(parser);\n                h.$render.clearCache(parser, true);\n            });\n        },\n        submit(successFn, failFn) {\n            this.validate((valid) => {\n                if (valid) {\n                    let formData = this.formData();\n                    if (isFunction(successFn))\n                        successFn(formData, this);\n                    else {\n                        h.options.onSubmit && h.options.onSubmit(formData, this);\n                        h.fc.$emit('on-submit', formData, this);\n                    }\n                } else {\n                    failFn && failFn(this)\n                }\n            });\n        },\n        clearValidateState(fields, clearSub = true) {\n            tidyFields(fields).forEach(field => {\n                if (clearSub) this.clearSubValidateState(field);\n                const parser = h.fieldList[field];\n                if (!parser)\n                    return;\n                h.$form.clearValidateState(parser);\n            });\n        },\n        clearSubValidateState(fields) {\n            tidyFields(fields).forEach(field => {\n                const subForm = h.subForm[field];\n                if (subForm) {\n                    if (Array.isArray(subForm)) {\n                        subForm.forEach(form => {\n                            form.clearValidateState();\n                        })\n                    } else if (subForm) {\n                        subForm.clearValidateState();\n                    }\n                }\n            })\n        },\n        getSubForm(field) {\n            return h.subForm[field];\n        },\n        btn: {\n            loading: (loading = true) => {\n                h.vm._buttonProps({loading: !!loading});\n            },\n            disabled: (disabled = true) => {\n                h.vm._buttonProps({disabled: !!disabled});\n            },\n            show: (isShow = true) => {\n                h.vm._buttonProps({show: !!isShow});\n            }\n        },\n        resetBtn: {\n            loading: (loading = true) => {\n                h.vm._resetProps({loading: !!loading});\n            },\n            disabled: (disabled = true) => {\n                h.vm._resetProps({disabled: !!disabled});\n            },\n            show: (isShow = true) => {\n                h.vm._resetProps({show: !!isShow});\n            }\n        },\n        closeModal: (field) => {\n            const parser = h.fieldList[field];\n            parser && parser.closeModel && parser.closeModel();\n        }\n    };\n}\n","import {\n    $del,\n    $set, deepExtend,\n    errMsg,\n    extend,\n    isString,\n    isUndef,\n    isValidChildren,\n    isPlainObject,\n    toLine,\n    toString,\n    uniqueId,\n    isFunction\n} from '@form-create/utils';\nimport BaseParser from '../factory/parser';\nimport Render from './render';\nimport Api from './api';\nimport {copyRule, enumerable} from './util';\n\n\nexport function getRule(rule) {\n    if (isFunction(rule.getRule))\n        return rule.getRule();\n    else\n        return rule;\n}\n\nexport default class Handle {\n\n    constructor(fc) {\n        const {vm, rules, options} = this.fc = fc;\n\n        this.watching = false;\n        this.vm = vm;\n        this.options = options;\n\n        this.validate = {};\n        this.formData = {};\n        this.subForm = {};\n\n        this.fCreateApi = undefined;\n\n        this.__init(rules);\n        this.$form = new fc.drive.formRender(this);\n        this.$render = new Render(this);\n\n        this.loadRule(this.rules, false);\n\n        this.$render.initOrgChildren();\n\n        this.$form.init();\n    }\n\n    __init(rules) {\n        this.fieldList = {};\n        this.trueData = {};\n        this.parsers = {};\n        this.customData = {};\n        this.sortList = [];\n        this.rules = rules;\n        this.origin = [...this.rules];\n        this.changeStatus = false;\n    }\n\n    modelEvent(parser) {\n        const modelList = this.fc.modelEvents;\n        return modelList[parser.type] || modelList[parser.originType] || parser.rule.model || parser.modelEvent;\n    }\n\n    loadRule(rules, child) {\n        rules.map((_rule, index) => {\n            if (child && isString(_rule)) return;\n\n            if (!_rule.type)\n                return console.error('未定义生成规则的 type 字段' + errMsg());\n\n            let parser;\n\n            if (_rule.__fc__) {\n                parser = _rule.__fc__;\n\n                //规则在其他 form-create 中使用,自动浅拷贝\n                if (!parser.deleted && (parser.vm !== this.vm || this.parsers[parser.id])) {\n                    rules[index] = _rule = copyRule(_rule);\n                    parser = this.createParser(this.parseRule(_rule));\n                } else {\n                    parser.update(this);\n                    let rule = parser.rule;\n                    this.parseOn(rule);\n                    this.parseProps(rule);\n                }\n            } else {\n                parser = this.createParser(this.parseRule(_rule));\n            }\n\n            let children = parser.rule.children, rule = parser.rule;\n            if (!this.notField(parser.field))\n                return console.error(`${rule.field} 字段已存在` + errMsg());\n\n            this.setParser(parser);\n\n            if (!_rule.__fc__) {\n                bindParser(_rule, parser);\n            }\n            if (isValidChildren(children)) {\n                this.loadRule(children, true);\n            }\n\n            if (!child) {\n                this.sortList.push(parser.id);\n            }\n\n            if (!this.isNoVal(parser))\n                Object.defineProperty(parser.rule, 'value', this.valueHandle(parser));\n\n            return parser;\n        }).filter(h => h).forEach(h => {\n            h.root = rules;\n        });\n    }\n\n    valueHandle(parser) {\n        return {\n            enumerable: true,\n            get: () => {\n                return parser.toValue(this.getFormData(parser));\n            },\n            set: (value) => {\n                if (this.isChange(parser, value)) {\n                    this.$render.clearCache(parser, true);\n                    this.setFormData(parser, parser.toFormValue(value));\n                    this.valueChange(parser, value);\n                    this.refresh();\n                }\n            }\n        };\n    }\n\n    createParser(rule) {\n        return new (this.fc.parsers[toString(rule.type).toLocaleLowerCase()] || BaseParser)(this, rule, '' + uniqueId());\n    }\n\n    parseRule(_rule) {\n        const def = defRule(), rule = getRule(_rule);\n\n        Object.defineProperties(rule, {\n            __origin__: enumerable(_rule)\n        });\n\n        Object.keys(def).forEach(k => {\n            if (isUndef(rule[k])) $set(rule, k, def[k]);\n        });\n\n        if (rule.field && this.options.formData[rule.field] !== undefined)\n            rule.value = this.options.formData[rule.field];\n\n        rule.options = parseArray(rule.options);\n        this.parseOn(rule);\n        this.parseProps(rule);\n\n        return rule;\n    }\n\n    parseOn(rule) {\n        this.parseInjectEvent(rule, rule.on || {});\n        if (!this.watching) {\n            this.margeEmit(rule);\n        }\n    }\n\n    margeEmit(rule) {\n        const emitEvent = this.parseEmit(rule);\n        if (Object.keys(emitEvent).length > 0) extend(rule.on, emitEvent);\n    }\n\n    parseProps(rule) {\n        this.parseInjectEvent(rule, rule.props || {});\n    }\n\n    parseInjectEvent(rule, on) {\n        if (this.options.injectEvent || rule.inject)\n            Object.keys(on).forEach(k => {\n                if (isFunction(on[k]))\n                    on[k] = this.inject(rule, on[k])\n            });\n        return on;\n    }\n\n    getInjectData(self, inject) {\n        const {option, rule} = this.vm.$options.propsData;\n        return {\n            $f: this.fCreateApi,\n            rule,\n            self: self.__origin__,\n            option,\n            inject: inject || rule.inject || {}\n        };\n    }\n\n    inject(self, _fn, inject) {\n        if (_fn.__inject) {\n            if (this.watching)\n                return _fn;\n            _fn = _fn.__origin;\n        }\n\n        const h = this;\n\n        const fn = function (...args) {\n            args.unshift(h.getInjectData(self, inject));\n            return _fn(...args);\n        };\n        fn.__inject = true;\n        fn.__origin = _fn;\n        return fn;\n    }\n\n    parseEmit(rule) {\n        let event = {}, {emit, emitPrefix, field, name} = rule;\n\n        if (!Array.isArray(emit)) return event;\n        const emitKey = emitPrefix ? emitPrefix : (field || name);\n        if (!emitKey) return event;\n\n        emit.forEach(config => {\n            let inject, eventName = config;\n            if (isPlainObject(config)) {\n                eventName = config.name;\n                inject = config.inject;\n            }\n            if (!eventName) return;\n\n            const fieldKey = toLine(`${emitKey}-${eventName}`).replace('_', '-');\n\n            const fn = (...arg) => {\n                this.vm.$emit(fieldKey, ...arg);\n            };\n            fn.__emit = true;\n            event[eventName] = (this.options.injectEvent || config.inject !== undefined) ? this.inject(rule, fn, inject) : fn;\n        });\n\n        return event;\n    }\n\n    run() {\n        if (this.vm.unique > 0)\n            return this.$render.run();\n        else {\n            this.vm.unique = 1;\n            return [];\n        }\n    }\n\n    setParser(parser) {\n        let {id, field, name, rule} = parser;\n        if (this.parsers[id])\n            return;\n        this.parsers[id] = parser;\n\n        if (name)\n            $set(this.customData, name, parser);\n\n        if (this.isNoVal(parser)) return;\n        this.fieldList[field] = parser;\n        $set(this.formData, field, parser.toFormValue(rule.value));\n        $set(this.validate, field, rule.validate || []);\n        $set(this.trueData, field, parser);\n    }\n\n    addSubForm(parser, subForm) {\n        this.subForm[parser.field] = subForm;\n    }\n\n    notField(field) {\n        return this.fieldList[field] === undefined;\n    }\n\n    isChange(parser, value) {\n        return JSON.stringify(parser.rule.value) !== JSON.stringify(value);\n    }\n\n    valueChange(parser) {\n        this.validateControl(parser);\n    }\n\n    onInput(parser, value) {\n        let val;\n        if (!this.isNoVal(parser) && this.isChange(parser, val = parser.toValue(value))) {\n            this.$render.clearCache(parser);\n            this.setFormData(parser, value);\n            this.changeStatus = true;\n            this.valueChange(parser);\n            this.vm.$emit('change', parser.field, val, this.fCreateApi);\n        }\n    }\n\n    getParser(id) {\n        return this.fieldList[id] || this.customData[id] || this.parsers[id];\n    }\n\n    created() {\n        const vm = this.vm;\n\n        vm.$set(vm, 'buttonProps', this.options.submitBtn);\n        vm.$set(vm, 'resetProps', this.options.resetBtn);\n        vm.$set(vm, 'formData', this.formData);\n\n\n        if (this.fCreateApi === undefined)\n            this.fCreateApi = Api(this);\n        this.fCreateApi.rule = this.rules;\n        this.fCreateApi.config = this.options;\n        if (this.fCreateApi.form) {\n            const form = this.fCreateApi.form;\n            Object.keys(form).forEach((field) => {\n                delete form[field];\n            })\n        } else {\n            Object.defineProperty(this.fCreateApi, 'form', {\n                value: {},\n                writable: false,\n                enumerable: true\n            });\n        }\n        Object.defineProperties(this.fCreateApi.form, Object.keys(this.fCreateApi.formData()).reduce((initial, field) => {\n            const parser = this.getParser(field);\n            const handle = this.valueHandle(parser);\n            handle.configurable = true;\n            initial[field] = handle;\n            return initial;\n        }, {}));\n    }\n\n    addParserWitch(parser) {\n        const vm = this.vm;\n\n        Object.keys(parser.rule).forEach((key) => {\n            if (['field', 'type', 'value', 'vm', 'template', 'name', 'config', 'control'].indexOf(key) !== -1 || parser.rule[key] === undefined) return;\n            try {\n                parser.watch.push(vm.$watch(() => parser.rule[key], (n, o) => {\n                    if (o === undefined) return;\n                    this.watching = true;\n                    if (key === 'validate')\n                        this.validate[parser.field] = n;\n                    else if (key === 'props')\n                        this.parseProps(parser.rule);\n                    else if (key === 'on')\n                        this.parseOn(parser.rule);\n                    else if (key === 'emit')\n                        this.margeEmit(parser.rule);\n\n                    this.$render.clearCache(parser);\n                    this.watching = false;\n                }, {deep: key !== 'children', immediate: true}));\n            } catch (e) {\n                //\n            }\n        });\n    }\n\n    refreshControl(parser) {\n        if (!this.isNoVal(parser) && parser.rule.control) {\n            this.validateControl(parser);\n        }\n    }\n\n\n    validateControl(parser) {\n        const controls = getControl(parser), len = controls.length, ctrlRule = parser.ctrlRule;\n        if (!len) return;\n        for (let i = 0; i < len; i++) {\n            const control = controls[i], validate = control.handle || (val => val === control.value);\n            if (validate(parser.rule.value, this.fCreateApi)) {\n                if (ctrlRule) {\n                    if (ctrlRule.children === control.rule)\n                        return;\n                    else\n                        removeControl(parser);\n                }\n                const rule = {\n                    type: 'fcFragment',\n                    native: true,\n                    children: control.rule\n                };\n                //TODO 位置可自定义\n                parser.root.splice(parser.root.indexOf(parser.rule.__origin__) + 1, 0, rule);\n                parser.ctrlRule = rule;\n                this.vm.$emit('control', parser.rule.__origin__, this.fCreateApi);\n                this.refresh();\n                return;\n            }\n        }\n        if (ctrlRule) {\n            removeControl(parser);\n            this.vm.$emit('control', parser.rule.__origin__, this.fCreateApi);\n            this.refresh();\n        }\n    }\n\n    mountedParser() {\n        const vm = this.vm;\n        Object.keys(this.parsers).forEach((id) => {\n            let parser = this.parsers[id];\n            if (parser.watch.length === 0) this.addParserWitch(parser);\n            this.refreshControl(parser);\n            parser.el = vm.$refs[parser.refName] || {};\n\n            if (parser.defaultValue === undefined)\n                parser.defaultValue = deepExtend({}, {value: parser.rule.value}).value;\n\n            parser.mounted && parser.mounted();\n        });\n    }\n\n    mounted() {\n        const mounted = this.options.mounted;\n\n        this.mountedParser();\n\n        mounted && mounted(this.fCreateApi);\n        this.fc.$emit('mounted', this.fCreateApi);\n    }\n\n    reload() {\n        const onReload = this.options.onReload;\n\n        this.mountedParser();\n\n        onReload && onReload(this.fCreateApi);\n        this.fc.$emit('on-reload', this.fCreateApi);\n    }\n\n    removeField(parser, value) {\n        const {id, field} = parser, index = this.sortList.indexOf(id);\n\n        delParser(parser, value);\n        $del(this.parsers, id);\n\n        if (index !== -1) {\n            this.sortList.splice(index, 1);\n        }\n\n        if (!this.fieldList[field]) {\n            $del(this.validate, field);\n            $del(this.formData, field);\n            $del(this.customData, field);\n            $del(this.fieldList, field);\n            $del(this.trueData, field);\n        }\n\n        if (this.subForm[parser.field])\n            $del(this.subForm, field);\n\n        return parser;\n    }\n\n    refresh() {\n        this.vm._refresh();\n    }\n\n    reloadRule(rules) {\n        const vm = this.vm;\n        if (!rules) return this.reloadRule(this.rules);\n        if (!this.origin.length) this.fCreateApi.refresh();\n        this.origin = [...rules];\n\n        const parsers = {...this.parsers};\n        const formData = this.fCreateApi.formData();\n        this.__init(rules);\n        this.loadRule(rules, false);\n        Object.keys(parsers).filter(id => this.parsers[id] === undefined)\n            .forEach(id => this.removeField(parsers[id], formData[parsers[id].field]));\n        this.$render.initOrgChildren();\n        this.formData = {...this.formData};\n        this.created();\n\n        vm.$f = this.fCreateApi;\n        this.$render.clearCacheAll();\n        this.refresh();\n\n        vm.$nextTick(() => {\n            this.reload();\n        });\n\n    }\n\n    setFormData(parser, value) {\n        $set(this.formData, parser.field, value);\n    }\n\n    getFormData(parser) {\n        return this.formData[parser.field];\n    }\n\n    fields() {\n        return Object.keys(this.formData);\n    }\n\n    isNoVal(parser) {\n        return !parser.isDef;\n    }\n\n}\n\nexport function delParser(parser, value) {\n    if (parser.ctrlRule)\n        removeControl(parser);\n    parser.watch.forEach((unWatch) => unWatch());\n    parser.watch = [];\n    parser.deleted = true;\n    parser.root = [];\n    Object.defineProperty(parser.rule, 'value', {\n        value\n    });\n}\n\nfunction parseArray(validate) {\n    return Array.isArray(validate) ? validate : [];\n}\n\nfunction getControl(parser) {\n    const control = parser.rule.control || [];\n    if (isPlainObject(control)) return [control];\n    else return control;\n}\n\nfunction removeControl(parser) {\n    const index = parser.root.indexOf(parser.ctrlRule);\n    if (index !== -1)\n        parser.root.splice(index, 1);\n    parser.ctrlRule = null;\n}\n\n\nfunction defRule() {\n    return {\n        validate: [],\n        col: {},\n        emit: [],\n        props: {},\n        on: {},\n        options: [],\n        title: undefined,\n        value: null,\n        field: '',\n        name: undefined,\n        className: undefined\n    };\n}\n\nfunction bindParser(rule, parser) {\n    Object.defineProperties(rule, {\n        __field__: enumerable(parser.field),\n        __fc__: enumerable(parser)\n    });\n}\n","const NAME = 'fcFragment';\n\nexport default {\n    name: NAME,\n    functional: true,\n    props: {\n        children: Array\n    },\n    render(h, ctx) {\n        return ctx.children\n    }\n}\n","import {\n    $set,\n    deepExtend,\n    extend,\n    isBool,\n    isElement,\n    toString,\n    isPlainObject\n} from '@form-create/utils';\nimport $FormCreate from '../components/formCreate';\nimport {formCreateName} from '../components/formCreate';\nimport Vue from 'vue';\nimport makerFactory from '../factory/maker';\nimport Handle from './handle';\nimport {creatorFactory} from '../factory/creator';\nimport BaseParser from '../factory/parser';\nimport {parseJson, copyRule, copyRules} from './util';\nimport fragment from '../components/fragment';\n\nexport let _vue = typeof window !== 'undefined' && window.Vue ? window.Vue : Vue;\n\nexport default function createFormCreate(drive) {\n\n    const components = {\n            [fragment.name]: fragment\n        }, parsers = {}, maker = makerFactory(), globalConfig = drive.getConfig(), data = {},\n        modelEvents = {};\n\n    function setParser(id, parser) {\n        id = toString(id);\n        parsers[id.toLocaleLowerCase()] = parser;\n        FormCreate.maker[id] = creatorFactory(id);\n    }\n\n    function setModel(id, model) {\n        modelEvents[id.toLocaleLowerCase()] = model;\n    }\n\n    function createParser() {\n        return class Parser extends BaseParser {\n        }\n    }\n\n    function component(id, component) {\n        id = toString(id);\n        const _id = id.toLocaleLowerCase();\n        if (_id === 'form-create' || _id === 'formcreate')\n            return get$FormCreate();\n        if (component === undefined)\n            return components[id];\n        else\n            components[id] = component;\n    }\n\n    function margeGlobal(config, _options) {\n        if (isBool(_options.submitBtn))\n            _options.submitBtn = {show: _options.submitBtn};\n\n        if (isBool(_options.resetBtn))\n            _options.resetBtn = {show: _options.resetBtn};\n\n        let options = deepExtend(config, _options);\n\n        $set(options, 'el', !options.el\n            ? window.document.body\n            : (isElement(options.el)\n                ? options.el\n                : document.querySelector(options.el)\n            ));\n\n        return options;\n    }\n\n    function get$FormCreate() {\n        return _vue.extend($FormCreate(FormCreate, components));\n    }\n\n\n    function bindAttr(formCreate) {\n        extend(formCreate, {\n            version: drive.version,\n            ui: drive.ui,\n            maker,\n            component,\n            setParser,\n            createParser,\n            data,\n            copyRule,\n            copyRules,\n            $form() {\n                return get$FormCreate();\n            },\n            parseJson(json) {\n                return parseJson(json);\n            }\n        });\n    }\n\n    function install(Vue, options) {\n        if (Vue._installedFormCreate === true) return;\n        Vue._installedFormCreate = true;\n\n        if (options && isPlainObject(options))\n            margeGlobal(globalConfig, options);\n\n        Vue.use(FormCreate);\n    }\n\n    function create(rules, option) {\n        const $vm = new _vue({\n            data() {\n                return {rule: rules, option: isElement(option) ? {el: option} : option};\n            },\n            render() {\n                return <form-create ref='fc' props={this.$data}/>\n            }\n        });\n        $vm.$mount();\n        return $vm;\n    }\n\n    class FormCreate {\n        constructor(rules, options = {}) {\n            this.fCreateApi = undefined;\n            this.drive = drive;\n            this.parsers = parsers;\n            this.modelEvents = modelEvents;\n            this.vm = undefined;\n            this.rules = Array.isArray(rules) ? rules : [];\n            this.options = margeGlobal(deepExtend({formData: {}}, globalConfig), options);\n        }\n\n        beforeCreate(vm) {\n            this.vm = vm;\n            this.handle = new Handle(this);\n        }\n\n        created() {\n            this.handle.created();\n        }\n\n        api() {\n            return this.handle.fCreateApi;\n        }\n\n        render() {\n            return this.handle.run();\n        }\n\n        mounted() {\n            this.handle.mounted();\n        }\n\n        $emit(eventName, ...params) {\n            if (this.$parent)\n                this.$parent.$emit(`fc:${eventName}`, ...params);\n\n            this.vm.$emit(eventName, ...params);\n        }\n\n        static create(rules, _opt = {}, parent) {\n\n            let $vm = create(rules, _opt);\n\n            const _this = $vm.$refs.fc.formCreate;\n            _this.parent = parent;\n            _this.options.el.appendChild($vm.$el);\n\n            return _this.handle.fCreateApi;\n        }\n\n        static install(Vue) {\n            const $formCreate = function (rules, opt = {}) {\n                return FormCreate.create(rules, opt, this);\n            };\n\n            bindAttr($formCreate);\n\n            Vue.prototype.$formCreate = $formCreate;\n\n            Vue.component(formCreateName, get$FormCreate());\n            Vue.component(fragment.name, _vue.extend(fragment));\n            _vue = Vue;\n        }\n\n        static init(rules, _opt = {}) {\n            let $vm = create(rules, _opt), formCreate = $vm.$refs.fc.formCreate;\n\n            return {\n                mount($el) {\n                    if ($el && isElement($el))\n                        formCreate.options.el = $el;\n                    formCreate.options.el.appendChild($vm.$el);\n                    return formCreate.handle.fCreateApi;\n                },\n                remove() {\n                    formCreate.options.el.removeChild($vm.$el);\n                },\n                destroy() {\n                    this.remove();\n                    $vm.$destroy();\n                },\n                $f: formCreate.handle.fCreateApi\n            };\n        }\n    }\n\n    bindAttr(FormCreate);\n\n\n    drive.components.forEach(component => {\n        FormCreate.component(component.name, component);\n    });\n\n    drive.parsers.forEach(({name, parser}) => {\n        FormCreate.setParser(name, parser);\n    });\n\n    Object.keys(drive.makers).forEach(name => {\n        FormCreate.maker[name] = drive.makers[name];\n    });\n\n    if (drive.modelEvents) {\n        Object.keys(drive.modelEvents).forEach((name) => setModel(name, drive.modelEvents[name]));\n    }\n\n    return {\n        FormCreate,\n        install\n    };\n}\n","import VData from './vData';\nimport VNode from './vNode';\nimport {deepExtendArgs, uniqueId} from '@form-create/utils';\n\n\nexport default class BaseForm {\n\n    constructor(handle) {\n        this.$handle = handle;\n        this.vm = handle.vm;\n        this.drive = this.$handle.fc.drive;\n        this.options = handle.options;\n        this.vNode = new VNode(this.vm);\n        this.vData = new VData();\n        this.unique = uniqueId();\n        this.refName = `cForm${this.unique}`;\n    }\n\n    getFormRef() {\n        return this.vm.$refs[this.refName];\n    }\n\n    init() {\n        this.$render = this.$handle.$render;\n    }\n\n    getGetCol(parser, field = 'col') {\n        let col = parser.rule[field] || {}, mCol = {}, pCol = {}, global = this.options.global;\n\n        if (!global)\n            return col;\n\n        if (global['*']) {\n            mCol = global['*'][field] || {};\n        }\n\n        if (global[parser.type]) {\n            pCol = global[parser.type][field] || {};\n        } else if (global[parser.originType]) {\n            pCol = global[parser.originType][field] || {};\n        }\n        col = deepExtendArgs({}, mCol, pCol, col);\n        return col;\n    }\n\n    beforeRender() {\n\n    }\n\n    render() {\n\n    }\n\n    inputVData() {\n    }\n}\n"],"names":["$set","target","field","value","Vue","set","$del","delete","isValidChildren","children","Array","isArray","length","_toString","Object","prototype","toString","isUndef","v","val","_typeof","JSON","stringify","String","extend","to","_from","key","debounce","fn","wait","timeout","arg","clearTimeout","setTimeout","isType","type","call","isPlainObject","isFunction","isString","isBool","toLine","name","line","replace","toLowerCase","indexOf","substr","isElement","nodeType","deepExtend","origin","mode","isArr","hasOwnProperty","clone","nst","undefined","_clone","getRule","deepExtendArgs","lst","forEach","id","uniqueId","errMsg","i","formCreateName","$FormCreate","FormCreate","components","componentName","props","rule","required","option","default","data","formData","buttonProps","resetProps","$f","isShow","unique","render","this","formCreate","methods","_buttonProps","_resetProps","_refresh","watch","n","handle","reloadRule","beforeCreate","$options","propsData","created","api","$emit","mounted","beforeDestroy","$render","clearCacheAll","normalMerge","toArrayMerge","functionalMerge","mergeJsxProps","objects","initial","reduce","a","b","arrA","arrB","event","hook","mergeFn","fn1","fn2","apply","arguments","defVData","on","VData","init","_data","classList","status","merge","class","keys","_this","keyList","objList","obj","vdataField","concat","baseRule","validate","options","col","control","emit","template","emitPrefix","native","info","creatorFactory","title","Creator","creatorTypeFactory","typeName","maker","constructor","keyAttrs","attr","objAttrs","opt","arrAttrs","PREFIX","SUFFIX","toJson","_isVue","__inject","__origin","__emit","makeFn","eval","parseJson","json","parse","k","e","console","error","enumerable","configurable","copyRule","copyRules","rules","commonMaker","create","make","createTmp","vm","makerFactory","toMaker","ruleToMaker","map","r","defineProperties","find","findField","model","parseVData","domProps","innerHTML","get","getVNode","VNode","setVm","$h","$createElement","nodeName","VNodeFn","Node","context","nodes","toLocaleLowerCase","use","fragment","BaseParser","vData","vNode","originType","isDef","el","refName","formItemRefName","root","ctrlRule","modelEvent","update","$handle","deleted","formValue","$de","Render","fc","$form","cache","renderList","parser","clear","cacheStatus","refresh","parent","clearCache","vnode","parsers","orgChildren","beforeRender","vn","sortList","renderParser","filter","global","toData","compile","getInjectData","setTemplateProps","fCreateApi","$off","$on","_this2","onInput","setGlobalConfig","form","renderTemplate","setCache","isNoVal","defaultRender","renderChildren","container","getCache","custom","parserToData","ref","subForm","_this3","addSubForm","getFormData","inputVData","child","__fc__","_this4","removeField","vdata","fApi","$props","Api","h","tidyFields","fields","all","fieldList","getValue","setValue","changeValue","changeField","getParser","index","__origin__","splice","reload","destroy","$el","parentNode","removeChild","$destroy","append","after","isChild","prepend","hidden","hiddenStatus","visibility","visibilityStatus","disabled","trueData","component","customData","bind","properties","submitBtnProps","resetBtnProps","node","updateOptions","onSubmit","sync","hideForm","changeStatus","clearChangeStatus","updateRule","cover","updateRules","updateValidate","updateValidates","validates","method","Error","once","$once","off","trigger","args","callback","subLen","state","___this","valid","sub","len","validFn","clearValidateState","validateField","resetFields","resetField","refreshControl","submit","successFn","failFn","clearSub","_this5","clearSubValidateState","getSubForm","btn","loading","show","resetBtn","closeModal","closeModel","Handle","watching","__init","drive","formRender","loadRule","initOrgChildren","modelList","modelEvents","_rule","parseOn","parseProps","createParser","parseRule","notField","setParser","bindParser","push","defineProperty","valueHandle","toValue","isChange","setFormData","toFormValue","valueChange","def","defRule","parseArray","parseInjectEvent","margeEmit","emitEvent","parseEmit","injectEvent","inject","self","_fn","unshift","emitKey","config","eventName","fieldKey","run","validateControl","submitBtn","writable","$watch","o","_this6","deep","immediate","controls","getControl","_this7","removeControl","_this8","addParserWitch","$refs","defaultValue","mountedParser","onReload","delParser","_this9","$nextTick","unWatch","className","__field__","NAME","functional","ctx","_vue","window","createFormCreate","globalConfig","getConfig","_id","get$FormCreate","margeGlobal","_options","document","querySelector","body","bindAttr","version","ui","$vm","$data","$mount","params","$parent","_opt","appendChild","$formCreate","mount","remove","makers","install","_installedFormCreate","BaseForm","mCol","pCol"],"mappings":"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"}